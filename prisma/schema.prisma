generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Concept {
  id           String    @id @default(uuid())
  problem      String
  evaluation   String?
  region       String?   @default("worldwide")
  // FIXME: At some point we should make it mandatory
  persona      String?   @default("")
  productType  String?   @default("") @map(name: "product_type")
  stage        String?   @default("")
  // We should validate uniqueness in the repository
  ideaId       String?   @map(name: "idea_id")
  createdAt    DateTime  @default(now()) @map(name: "created_at")
  updatedAt    DateTime  @updatedAt @map(name: "updated_at")
  evaluatedAt  DateTime? @map(name: "evaluated_at")
  acceptedAt   DateTime? @map(name: "accepted_at")
  archivedAt   DateTime? @map(name: "archived_at")
  anonymizedAt DateTime? @map(name: "anonymized_at")

  @@map("concepts")
}

model Idea {
  id              String           @id @default(uuid())
  conceptId       String           @unique @map(name: "concept_id")
  problem         String
  marketExistence String           @map(name: "market_existence")
  // FIXME: At some point we should make these five fields mandatory
  region          String?
  productType     String?          @map(name: "product_type")
  stage           String?
  statement       String?
  hypotheses      String?
  targetAudiences TargetAudience[]
  contents        IdeaContent[]
  createdAt       DateTime         @default(now()) @map(name: "created_at")
  updatedAt       DateTime         @updatedAt @map(name: "updated_at")
  migratedAt      DateTime?        @map(name: "migrated_at")
  archivedAt      DateTime?        @map(name: "archived_at")
  expiresBy       DateTime?        @map(name: "expires_by")

  @@map("ideas")
}

model IdeaContent {
  id        String   @id @default(uuid())
  key       String
  value     String
  ideaId    String   @map(name: "idea_id")
  idea      Idea     @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@unique([ideaId, key])
  @@map("idea_contents")
}

model TargetAudience {
  id                String    @id @default(uuid())
  segment           String
  description       String
  challenges        String
  // FIXME: At some point we should make these three fields mandatory
  why               String?
  painPoints        String?   @map(name: "pain_points")
  targetingStrategy String?   @map(name: "targeting_strategy")
  ideaId            String    @map(name: "idea_id")
  idea              Idea      @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  evaluatedAt       DateTime? @map(name: "evaluated_at")

  @@map("target_audiences")
}
